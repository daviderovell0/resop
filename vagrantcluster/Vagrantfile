# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Note: insecure hack!
  # NFS mounting of /home from the frontend results in the same authorized_keys
  # file on every node.  With this option vagrant won't generate a new key for
  # each host.  But don't use it in production!
  config.ssh.insert_key = false
  # config.ssh.username = "vagrant"
  # config.ssh.password = "hello"
  # config.ssh.forward_agent = true 

  config.vm.define "master" do |master|
    master.vm.box = "centos/7"
    master.vm.hostname = "master"
    master.vm.network :private_network, ip: "192.168.56.2"
    master.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    end
  end

  config.vm.define "fe1" do |fe1|
    fe1.vm.box = "centos/7"
    fe1.vm.hostname = "fe1"
    fe1.vm.network :private_network, ip: "192.168.56.3"
    
    # send API folder
    fe1.vm.synced_folder "../", "/resop", type: "rsync",    
    rsync__exclude: ["node_modules/", ".git/", ".gitingore", "package-lock.json",
    "deploy/", "dist/", ".vscode/", "docs", "media", ".env"], rsync__verbose: true

    # expose API port
    fe1.vm.network "forwarded_port", guest: 3000, host: 3300

    fe1.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      ## extra memory for NPM 
      vb.memory = "1024"
    end
  end

  config.vm.define "node01" do |node01|
    node01.vm.box = "centos/7"
    node01.vm.hostname = "node01"
    node01.vm.network :private_network, ip: "192.168.56.101"
    node01.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    end
  end

  config.vm.define "node02" do |node02|
    node02.vm.box = "centos/7"
    node02.vm.hostname = "node02"
    node02.vm.network :private_network, ip: "192.168.56.102"
    node02.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    end
  end

  config.vm.define "node03" do |node03|
    node03.vm.box = "centos/7"
    node03.vm.hostname = "node03"
    node03.vm.network :private_network, ip: "192.168.56.103"
    node03.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    end
  end

  config.vm.define "node04" do |node04|
    node04.vm.box = "centos/7"
    node04.vm.hostname = "node04"
    node04.vm.network :private_network, ip: "192.168.56.104"
    node04.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    end
  end

  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL

  ## unusual ansible config
  ## this configuration will run ansible from each VM *separately* for that VM only.
  ## master will run the master.yml playbook, node01 for node01 etc
  ## the filtering is done by -l `hostname`
  config.vm.provision "shell", inline: <<-SHELL
    #enable ssh pwd auth
    ##install ansible
    if [ -f /vagrant/localenv.sh ]; then
      . /vagrant/localenv.sh
    fi
    yum install -y https://github.com/openhpc/ohpc/releases/download/v1.3.GA/ohpc-release-1.3-1.el7.x86_64.rpm
    yum install -y ansible

    ansible-playbook -c local -i /vagrant/ansiblerepo/inventory/hosts -l `hostname` /vagrant/ansiblerepo/site.yaml
  SHELL

end
